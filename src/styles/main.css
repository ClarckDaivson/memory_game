body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    /*background-color: #fc1e8a;*/
    user-select: none;
    background: linear-gradient(325deg, #03001e 0%, #7303c0 30%, #ec38bc 70%, #fdeff9 100%);
}

.container {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
    background: linear-gradient(325deg, #03001e 0%, #7303c0 30%, #ec38bc 70%, #fdeff9 100%);
    padding: 40px 60px;
    border-radius: 10px;
    border: 1px solid black;
}

h2 {
    font-size: 3rem;
    color: #fff;
    text-transform: uppercase;
    letter-spacing: 0.1em;
}

.reset {
    padding: 15px 20px;
    width: 100%;
    color: #000;
    background-color: #fff;
    border: none;
    font-size: 1.5em;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.3s, color 0.3s;

}

.reset:focus {
    outline: 2px solid #ec38bc;
    outline-offset: 2px;
}

.reset:hover {
    color: #000;
    background: linear-gradient(325deg, #03001e 0%, #7303c0 30%, #ec38bc 70%, #fdeff9 100%);
    cursor: pointer;
}

.game {
    width: 430px;
    height: 430px;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    transform-style: preserve-3d;
    perspective: 500px;
}

.item {
    position: relative;
    width: 100px;
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #fff;
    font-size: 3rem;
    transform: rotateY(180deg);
    transition: 0.25s;
    cursor: pointer; /* Add cursor for interactivity */

}

.item:hover {
    transform: scale(1.05); /* Scale effect on hover */
}

.item::after {
    content: "";
    position: absolute;
    inset: 0;
    background: #6a0303;
    /*opacity: 0.85;*/
    transition: 0.25s;
    transform: rotateY(0deg);
    backface-visibility: hidden;

}

.item.item-boxOpen {
    transform: rotateY(0deg);
}

.boxOpen::after,
.boxMatch::after {
    transform: rotateY(180deg);
}
